install.packages("RMySQL",type="source")
install.packages("RMySQL",type="source")
ucscDb <- dbConnect(MySQL(),user="genome",host="genome-mysql.cse.ucsc.edu")
library(RMySQL)
install.packages("RMySQL",type="source")
install.packages("RMySQL",type="source")
install.packages("RMySQL",type="source")
install.packages("RMySQL",type="source")
sys.getlocale()
Sys.getlocale()
3.5^2
15.17-3.5^2
nosim <- 1000
n <- 10
sd(apply(matrix)(rnorm(nosim*n),nosim),1,mean))
sd(apply(matrix(rnorm(nosim*n),nosim),1,mean))
sd(apply(matrix(rnorm(nosim*n),nosim),1,mean))
sd(apply(matrix(rnorm(nosim*n),nosim),1,mean))
sd(apply(matrix(rnorm(nosim*n),nosim),1,mean))
sd(apply(matrix(rnorm(nosim*n),nosim),1,mean))
sd(apply(matrix(rnorm(nosim*n),nosim),1,mean))
sd(apply(matrix(rnorm(nosim*n),nosim),1,mean))
nosim <- 10000
sd(apply(matrix(rnorm(nosim*n),nosim),1,mean))
1/sqrt(10000)
1/sqrt(10)
pbinom(8,10,0.5,lower.tail=FALSE)
pnorm(x,mean=80,sd=10)
pnorm(70,mean=80,sd=10)
(70-80)/10
pnorm(1160,mean=1020,sd=50)
pnorm(1160,mean=1020,sd=50,lower.tail=FALSE)
pnorm(70,mean=80,sd=10,lower.tail=TRUE)
pnorm(70,mean=80,sd=10,lower.tail=FALSE)
1160-1020
140/50
(80-70)/10
pnorm(2.8)
pnorm(2.8,lower.tail=FALSE)
pnorm(-1,lower.tail=FALSE)
pnorm(1,lower.tail=FALSE)
qnorm(0.75,mean=1020,sd=50)
pnorm(2,lower.tail=FALSE)
pnorm(5,mean=11,sd=2,lower.tail=TRUE)
pnorm(3,mean=11,sd=2,lower.tail=TRUE)
pnorm(3,mean=11,sd=2,lower.tail=FALSE)
pnorm(-3,lower.tail=FALSE)
pnorm(-4,lower.tail=FALSE)
pnorm(-40,lower.tail=FALSE)
pnorm(-5,lower.tail=FALSE)
pnorm(-6,lower.tail=FALSE)
pnorm(3,lower.tail=FALSE)
pnorm(3,lower.tail=TRUE)
pnorm(2,lower.tail=TRUE)
pnorm(1.96,lower.tail=TRUE)
pnorm(1.68,lower.tail=TRUE)
1100+1.28*75
pnorm(1175,mean=1100,sd=75)
pnorm(1196,mean=1100,sd=75)
1100+1.68*75
pnorm(1226,mean=1100,sd=75)
pnorm(1223,mean=1100,sd=75)
pnorm(1247,mean=1100,sd=75)
pnorm(1)
pnorm(1.28)
pnorm(1.68)
ppois(40,lambda=9*5)
pbinom(2, size=500,prob=0.01)
qnorm(0.95)
qnorm(0.95)*75+1100
qnorm(0.95)*75/10+1100
choose(5, 4)*0.5^5 + choose(5, 5)*0.5^5 # 0.1875
mean(rnorm(1e+07, mean = 0.5, sd = sqrt(1/12)))
mean(rnorm(1e+07, mean = 0.5, sd = sqrt(1/12)))
mean(rnorm(1e+07, mean = 0.5, sd = sqrt(1/12)))
mean(rnorm(1e+07, mean = 0.5, sd = sqrt(1/12)))
mean(rnorm(1e+07, mean = 0.5, sd = sqrt(1/120)))
mean(rnorm(1e+07, mean = 0.5, sd = sqrt(1/120)))
mean(rnorm(1e+07, mean = 0.5, sd = sqrt(1/120)))
mean(rnorm(1e+07, mean = 0.5, sd = sqrt(1/1200)))
mean(rnorm(1e+07, mean = 0.5, sd = sqrt(1/1200)))
mean(rnorm(1e+07, mean = 0.5, sd = sqrt(1/1200000)))
mean(rnorm(1e+07, mean = 0.5, sd = sqrt(1/1200000)))
mean(rnorm(1e+07, mean = 0.5, sd = sqrt(1/1200000)))
mean(rnorm(1e+07, mean = 0.5, sd = sqrt(1/1200000)))
mean(rnorm(1e+07, mean = 0.5, sd = sqrt(1/1200000)))
mean(rnorm(1e+07, mean = 0.5, sd = sqrt(1/12000000)))
mean(rnorm(1e+07, mean = 0.5, sd = sqrt(1/12000000)))
mean(rnorm(1e+07, mean = 0.5, sd = sqrt(1/12000000)))
mean(rnorm(1e+07, mean = 0.5, sd = sqrt(1/12000000)))
mean(rnorm(1e+07, mean = 0.5, sd = 0)
)
mean(rnorm(1e+07, mean = 0.5, sd = 0))
mean(rnorm(1e+07, mean = 0.5, sd = 0))
mean(rnorm(1e+07, mean = 0.5, sd = 0))
mean(rnorm(1e+07, mean = 0.5, sd = 0))
mean(rnorm(1e+07, mean = 0.5, sd = 10^-10))
mean(rnorm(1e+07, mean = 0.5, sd = 10^-10))
mean(rnorm(1e+07, mean = 0.5, sd = 10^-6))
mean(rnorm(1e+07, mean = 0.5, sd = 10^-6))
mean(rnorm(1e+07, mean = 0.5, sd = 10^-4))
mean(rnorm(1e+07, mean = 0.5, sd = 10^-4))
mean(rnorm(1e+07, mean = 0.5, sd = 10^-3))
mean(rnorm(1e+07, mean = 0.5, sd = 10^-3))
mean(rnorm(1e+03, mean = 0.5, sd = 1/12))
mean(rnorm(1e+03, mean = 0.5, sd = 1/12))
mean(rnorm(1e+03, mean = 0.5, sd = 1/12))
mean(rnorm(1e+03, mean = 0.5, sd = 1/12))
mean(rnorm(1e+03, mean = 0.5, sd = 1/12))
ppois(10,lambda=3*5)
poisson.test(10*60,60)
m <- 10
alpha <- .05
alphaFwer <- alpha / m
alphaFwer
?str
ibrary(datasets)
df <- data(ToothGrowth)
library(datasets)
df <- data(ToothGrowth)
str(df)
df <- data.frame(ToothGrowth)
View(df)
View(df)
rm(df)
rm(ToothGrowth)
library(datasets)
df <- data.frame(ToothGrowth)
View(df)
View(df)
library(mtcars)
data(mtcars)
library(datasets)
data(mtcars)
mtpy <- data(mtcars)
mtcars$mpg
mtpy <- data(mtcars)
mtpy <- mtcars
mtpy$wt
lm(mtcars$mpg ~ cyl, wt)
lm(mtcars$mpg ~ mtcars$cyl, mtcars$wt)
?lm
lm(mtcars$mpg ~ mtcars$cyl + mtcars$wt)
fit <- lm(mtcars$mpg ~ mtcars$cyl + mtcars$wt)
summary(fit)
fit <- lm(mtcars$mpg ~ mtcars$wt + mtcars$cyl)
summary(fit)
fit
View(mtcars)
lm(mt$mpg ~ mt$mt + mt$wt)
library(datasets)
mt <- data(mtcars)
lm(mt$mpg ~ mt$mt + mt$wt)
library(datasets)
mt <- data(mtcars)
fit <- lm(mt$mpg ~ mt$cyl + mt$wt)
summary(fit)
library(datasets)
mt <- data(mtcars)
mt2 <- mt[mt$cyl == 4,]
fit <- lm(mt2$mpg ~ mt2$cyl + mt2$wt)
summary(fit)
library(datasets)
mt <- data(mtcars)
mt2 <- mt[mt$cyl == 4,]
fit <- lm(mt2$mpg ~ mt2$cyl + mt2$wt)
summary(fit)
summary(fit)
library(datasets)
mt <- data(mtcars)
mt2 <- mt[mt$cyl == 4,]
fit <- lm(mt2$mpg ~ mt2$cyl + mt2$wt)
summary(fit)
mt <- data(mtcars)
mt2 <- mt[mt$cyl == 8,]
fit <- lm(mt2$mpg ~ mt2$cyl + mt2$wt)
summary(fit)
mt2 <- mt[mt$cyl == 8,]
library(datasets)
mt <- data(mtcars)
mt2 <- mt[mt$cyl == 4,]
fit <- lm(mt2$mpg ~ mt2$cyl + mt2$wt)
summary(fit)
mt <- data(mtcars)
mt2 <- mt[mt$cyl == 8,]
fit <- lm(mt2$mpg ~ mt2$cyl + mt2$wt)
summary(fit)
library(datasets)
mt <- data(mtcars)
library(datasets)
mt <- data(mtcars)
mt <- data(mtcars)
library(datasets)
data(mtcars)
mt2 <- mtcar[mtcars$cyl == 4,]
library(datasets)
data(mtcars)
mt2 <- mtcars[mtcars$cyl == 4,]
library(datasets)
data(mtcars)
mt2 <- mtcars[mtcars$cyl == 4,]
fit <- lm(mt2$mpg ~ mt2$cyl + mt2$wt)
summary(fit)
mt2 <- mtcars[mtcars$cyl == 8,]
fit <- lm(mt2$mpg ~ mt2$cyl + mt2$wt)
summary(fit)
library(datasets)
data(mtcars)
mt2 <- mtcars[mtcars$cyl == 4,]
fit <- lm(mt2$mpg ~ mt2$cyl + mt2$wt)
summary(fit)
mt2 <- mtcars[mtcars$cyl == 8,]
fit2 <- lm(mt2$mpg ~ mt2$cyl + mt2$wt)
summary(fit2)
library(datasets)
data(mtcars)
mt2 <- mtcars[mtcars$cyl == 4,]
fit <- lm(mt2$mpg ~ mt2$wt)
summary(fit)
mt2 <- mtcars[mtcars$cyl == 8,]
fit2 <- lm(mt2$mpg ~  mt2$wt)
summary(fit2)
library(datasets)
data(mtcars)
mt2 <- mtcars[mtcars$cyl == 4,]
fit <- lm(mpg ~ wt + cyl, data=mt)
summary(fit)
library(datasets)
data(mtcars)
mt2 <- mtcars[mtcars$cyl == 4,]
fit <- lm(mpg ~ wt + cyl, data=mt)
summary(fit)
library(datasets)
data(mtcars)
mt2 <- mtcars[mtcars$cyl == 4,]
fit <- lm(mpg ~ wt + cyl, data=mt2)
summary(fit)
library(datasets)
data(mtcars)
mt2 <- mtcars[mtcars$cyl == 4,]
mt2 <- mtcars
fit <- lm(mpg ~ wt + cyl, data=mt2)
summary(fit)
library(datasets)
data(mtcars)
mt2 <- mtcars[mtcars$cyl == 4,]
mt2 <- mtcars
fit <- lm(mpg ~ wt + cyl, data=mt2)
fit
summary(fit)
library(datasets)
data(mtcars)
mt2 <- mtcars[mtcars$cyl == 4,]
#mt2 <- mtcars
fit <- lm(mpg ~ wt + cyl, data=mt2)
fit
summary(fit)
lm(mpg ~ I(wt * 0.5) + factor(cyl), data = mtcars)
x <- c(0.586, 0.166, -0.042, -0.614, 11.72)
y <- c(0.549, -0.026, -0.127, -0.751, 1.344)
mean(X)
mean(x)
mean(y)
lm(y ~ x)
-0.1067+.1289*2.3632
adData = data.frame(diagnosis,predictors)
trainIndex = createDataPartition(diagnosis,p=0.5,list=FALSE)
training = adData[trainIndex,]
testing = adData[trainIndex,]
library(AppliedPredictiveModeling)
library(caret)
data(AlzheimerDisease)
library(AppliedPredictiveModeling)
library(caret)
data(AlzheimerDisease)
library(manipulate)
myPlot <- function(s) {
plot(cars$dist - mean(cars$dist), cars$speed - mean(cars$speed))
abline(0, s)
}
manipulate(myPlot(s), slider = x(0, 2, step = 0.1))
library(manipulate)
myPlot <- function(s) {
plot(cars$dist - mean(cars$dist), cars$speed - mean(cars$speed))
abline(0, s)
}
manipulate(myPlot, s = slider(0, 2, step = 0.1))
library(manipulate)
myPlot <- function(s) {
plot(cars$dist - mean(cars$dist), cars$speed - mean(cars$speed))
abline(0, s)
}
manipulate(myPlot, s = slider(0, 2, step = 0.1))
library(manipulate)
myPlot <- function(s) {
plot(cars$dist - mean(cars$dist), cars$speed - mean(cars$speed))
abline(0, s)
}
manipulate(myPlot(s), x.s = slider(0, 2, step = 0.1))
library(manipulate)
myPlot <- function(s) {
plot(cars$dist - mean(cars$dist), cars$speed - mean(cars$speed))
abline(0, s)
}
manipulate(myPlot(s), s = slider(0, 2, step = 0.1))
?colSums
?mean
?lm
?colSums
?mean
?dgamma
?colSums
?showMethods
?getMethod
?show
?show
?predict
?dgamma
?predict
?lm
?predict
?lm
?dgamma
library(swirl)
swirl()
var(rpois(1000,50))
nxt()
head(hits)
class(hits[,'date'])
as.integer(head(hits[,'date']))
mdl <- glm(visits ~ date, poisson, hits)
summary(mdl)
exp(confint(mdl,'date'))
which.max(hits[,])
which.max(hits[,'visits'])
hits[704,]
lambda <- mdl$fitted.values[704]
qpois(.95, lambda)
mdl2 <- 1
swirl
swirl()
mdl2 <- pois(100,10)
mdl2 <- qpois(100,10)
swirl()
mdl2 <- glm(simplystats ~ date, poisson, hits, offset=log(visits+1))
qpois(.95,mdl2$fitted.values[704])
data(mtcars)
mtcars2 <- mtcars
View(mtcars)
?mtcars
fit <- lm(mpg ~ am, df)
fit <- lm(mpg ~ am, mtcars)
df
str(mtcars)
?str
?mean
View(mtcars)
View(mtcars)
df
df <- data.frame(mpg=mtcars$mpg,
cyl=factor(mtcars$cyl),
disp=mtcars$disp,
hp=mtcars$hp,
drat=mtcars$drat,
wt=mtcars$wt,
qsec=mtcars$qsec,
vs=factor(mtcars$vs),
am=factor(mtcars$am,labels=c("Automatic","Manual")),
gear=factor(mtcars$gear),
carb=mtcars$carb)
mean(df$mpg[df$am==0], na.rm=TRUE)
df
df$mpg
df$mpg[df$am==0]
df$mpg[df$am==0,]
df$mpg[df$am=="Automatic"]
table(c(muMan,muAuto,muMan/muAuto,muAuto/muMan))
?table
?step
?eval
?mtcars
?step
### Inference
?anova
vs=factor(mtcars$vs),
?step
?anova
library(shinyapps)
deployApp(".")
install.packages("devtools")
devtools::install_github('rstudio/shinyapps')
setwd("C:/Users/User/Dropbox/Coursera/Data Scientist/9 - Developing Data Products/Course Project")
dir()
deployApp("shinyapp")
library(shinyapps)
deployApp("shinyapp")
setAccountInfo
deployApp("")
deployApp()
setwd("shinyapp")
deployApp()
deployApp(".")
?setAccountInfo
shinyapps::setAccountInfo(name='ypat',
token='EF6F8F2E97099CF9CB79515DE224EDBA',
secret='Exmh9T3AKayF7h1iVVavkgN5J32JgAidya0f34ID')
deployApp(".")
deployApp(".")
deployApp(".")
deployApp(".")
deployApp(".")
runApp()
library(shiny)
runApp()
runApp()
runApp()
deployApp(".")
deployApp(".")
terminateApp(".")
terminateApp("shinyapp")
terminateApp("ShinyApp")
deployApp(".")
terminateApp("ShinyApp")
deployApp(".")
READ_Fun <- function(x) {
if(!file.exists(x)) {
FILE_URL <- paste('http://www.acdi-cida.gc.ca/INET/IMAGES.NSF/vLUImages/Open%20Data/$file/',x,sep="")
download.file(FILE_URL,x,mode="wb")
}
df <- read.csv(x, stringsAsFactors=FALSE)
return(df)
}
df.2010.2011 <- READ_Fun("MNCH-2010-2011.csv")
df.2011.2012 <- READ_Fun("MNCH-2011-2012.csv")
df.2012.2013 <- READ_Fun("MNCH-2012-2013.csv")
df <- df.2010.2011[str_trim(df.2010.2011[,12]) %in% c("Afghanistan"
,"Bangladesh"
,"Ethiopia"
,"Haiti"
,"Malawi"
,"Mali"
,"Mozambique"
,"Nigeria"
,"Sudan"
,"Tanzania"),]
#str(df)
df[12] <- factor(df[[12]])
terminateApp("ShinyApp")
terminateApp("ShinyApp")
terminateApp("ShinyApp")
deployApp(".")
terminateApp("ShinyApp")
terminateApp("ShinyApp")
deployApp(".")
terminateApp("ShinyApp")
terminateApp("ShinyApp")
terminateApp("ShinyApp")
deployApp(".")
terminateApp("ShinyApp")
terminateApp("ShinyApp")
deployApp(".")
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
terminateApp("ShinyApp")
deployApp(".")
terminateApp("ShinyApp")
deployApp(".")
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
